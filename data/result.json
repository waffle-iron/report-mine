{"report": {"environment": {"Python": "3.5.2", "Platform": "Darwin-15.3.0-x86_64-i386-64bit"}, "tests": [{"setup": {"duration": 16.759169101715088, "name": "setup", "outcome": "passed"}, "teardown": {"duration": 9.703636169433594e-05, "name": "teardown", "outcome": "passed"}, "name": "tests/events_api_tests/test_events_api.py::EventsAPITests::test_future_event_details_is_same_as_in_DB", "run_index": 1, "call": {"longrepr": "('/Users/jaydeepc/Documents/work/price/price_kohls_api_tests/api/tests/events_api_tests/test_events_api.py', 73, 'Skipped: Skipping becasue Future events do not exist')", "duration": 0.919964075088501, "name": "call", "outcome": "skipped"}, "duration": 34.43839931488037, "outcome": "skipped"}, {"setup": {"duration": 0.0002808570861816406, "name": "setup", "outcome": "passed"}, "teardown": {"duration": 0.00011706352233886719, "name": "teardown", "outcome": "passed"}, "name": "tests/matchcompetitivepositioning_tests/test_matchcompetitivepositioning_api.py::CompetitivePositioningAPI::test_user_can_retrieve_details_of_mypricegroup_and_competitors", "run_index": 21, "call": {"duration": 3.248404026031494, "name": "call", "outcome": "passed"}, "duration": 3.2490828037261963, "outcome": "passed"}, {"setup": {"duration": 0.0002961158752441406, "name": "setup", "outcome": "passed"}, "teardown": {"duration": 8.392333984375e-05, "name": "teardown", "outcome": "passed"}, "name": "tests/force_breakup_tests/test_force_breakup_api.py::ForceBreakupAPITests::test_overallRecommandation_in_force_breakup_details_is_matching_db", "run_index": 8, "call": {"duration": 1.1490740776062012, "name": "call", "outcome": "passed"}, "duration": 1.1497502326965332, "outcome": "passed"}, {"setup": {"duration": 26.110399961471558, "stdout": "93955\n2016-11-27\n2016-10-31\n", "name": "setup", "outcome": "passed"}, "teardown": {"duration": 8.702278137207031e-05, "name": "teardown", "outcome": "passed"}, "name": "tests/matchcompetitivepositioning_tests/test_matchcompetitivepositioning_api.py::CompetitivePositioningAPI::test_number_columns_in_responses_of_competitors_matches", "run_index": 16, "call": {"duration": 2.2902989387512207, "name": "call", "outcome": "passed"}, "duration": 54.51118588447571, "outcome": "passed"}, {"setup": {"duration": 0.0002830028533935547, "name": "setup", "outcome": "passed"}, "teardown": {"duration": 7.700920104980469e-05, "name": "teardown", "outcome": "passed"}, "name": "tests/matchcompetitivepositioning_tests/test_matchcompetitivepositioning_api.py::CompetitivePositioningAPI::test_number_columns_in_responses_of_mypricegroup_matches", "run_index": 17, "call": {"duration": 1.4282798767089844, "name": "call", "outcome": "passed"}, "duration": 1.4289228916168213, "outcome": "passed"}, {"setup": {"duration": 0.00027179718017578125, "name": "setup", "outcome": "passed"}, "teardown": {"duration": 0.0008258819580078125, "name": "teardown", "outcome": "passed"}, "name": "tests/sell_through_tests/test_sell_through_api.py::SellThroughAPITests::test_user_can_retrieve_sell_through_details", "run_index": 28, "call": {"duration": 4.383148908615112, "name": "call", "outcome": "passed"}, "duration": 4.384518384933472, "outcome": "passed"}, {"setup": {"duration": 16.457018852233887, "name": "setup", "outcome": "passed"}, "teardown": {"duration": 9.298324584960938e-05, "name": "teardown", "outcome": "passed"}, "name": "tests/force_breakup_tests/test_force_breakup_api.py::ForceBreakupAPITests::test_inSeasonCompetitivePositioning_in_force_breakup_details_is_matching_db", "run_index": 7, "call": {"duration": 1.2595059871673584, "name": "call", "outcome": "passed"}, "duration": 34.17363667488098, "outcome": "passed"}, {"setup": {"duration": 0.0002930164337158203, "name": "setup", "outcome": "passed"}, "teardown": {"duration": 8.511543273925781e-05, "name": "teardown", "outcome": "passed"}, "name": "tests/force_breakup_tests/test_force_breakup_api.py::ForceBreakupAPITests::test_user_can_not_retrieve_force_details_with_invalid_event_key", "run_index": 11, "call": {"duration": 0.8997948169708252, "name": "call", "outcome": "passed"}, "duration": 0.9004659652709961, "outcome": "passed"}, {"setup": {"duration": 0.0002911090850830078, "name": "setup", "outcome": "passed"}, "teardown": {"duration": 0.00010395050048828125, "name": "teardown", "outcome": "passed"}, "name": "tests/events_api_tests/test_events_api.py::EventsAPITests::test_user_can_retrieve_event_details", "run_index": 6, "call": {"duration": 1.0407960414886475, "name": "call", "outcome": "passed"}, "duration": 1.0414822101593018, "outcome": "passed"}, {"setup": {"duration": 15.045703887939453, "name": "setup", "outcome": "passed"}, "teardown": {"duration": 0.00013208389282226562, "name": "teardown", "outcome": "passed"}, "name": "tests/event_price_volume_tests/test_preseason_force_price_volume_api.py::PriceVolumeAPITests::test_user_can_retrieve_price_volume_details", "run_index": 0, "call": {"duration": 1.0194270610809326, "name": "call", "outcome": "passed"}, "duration": 31.11096692085266, "outcome": "passed"}, {"setup": {"duration": 0.00025010108947753906, "name": "setup", "outcome": "passed"}, "teardown": {"duration": 8.487701416015625e-05, "name": "teardown", "outcome": "passed"}, "name": "tests/force_breakup_tests/test_force_breakup_api.py::ForceBreakupAPITests::test_sellThrough_in_force_breakup_details_is_matching_db", "run_index": 10, "call": {"duration": 2.5128440856933594, "name": "call", "outcome": "passed"}, "duration": 2.5134291648864746, "outcome": "passed"}, {"setup": {"duration": 0.0003581047058105469, "name": "setup", "outcome": "passed"}, "teardown": {"duration": 8.082389831542969e-05, "name": "teardown", "outcome": "passed"}, "name": "tests/matchcompetitivepositioning_tests/test_matchcompetitivepositioning_api.py::CompetitivePositioningAPI::test_values_in_competitors_matches_according_to_day_key", "run_index": 22, "call": {"duration": 1.3665688037872314, "name": "call", "outcome": "passed"}, "duration": 1.367365837097168, "outcome": "passed"}, {"setup": {"duration": 0.000225067138671875, "name": "setup", "outcome": "passed"}, "teardown": {"duration": 8.606910705566406e-05, "name": "teardown", "outcome": "passed"}, "name": "tests/events_api_tests/test_events_api.py::EventsAPITests::test_user_can_not_retrieve_event_details_with_invalid_factid", "run_index": 4, "call": {"duration": 2.009998083114624, "name": "call", "outcome": "passed"}, "duration": 2.0105342864990234, "outcome": "passed"}, {"setup": {"duration": 0.0002911090850830078, "name": "setup", "outcome": "passed"}, "teardown": {"duration": 8.487701416015625e-05, "name": "teardown", "outcome": "passed"}, "name": "tests/matchcompetitivepositioning_tests/test_matchcompetitivepositioning_api.py::CompetitivePositioningAPI::test_user_can_not_retrieve_details_of_mypricegroup_and_competitors_with_nonexisting_factid", "run_index": 20, "call": {"duration": 1.0037429332733154, "name": "call", "outcome": "passed"}, "duration": 1.0044100284576416, "outcome": "passed"}, {"setup": {"duration": 0.0002918243408203125, "name": "setup", "outcome": "passed"}, "teardown": {"duration": 7.295608520507812e-05, "name": "teardown", "outcome": "passed"}, "name": "tests/events_api_tests/test_events_api.py::EventsAPITests::test_historic_event_details_is_same_as_in_DB", "run_index": 2, "call": {"duration": 1.0149009227752686, "name": "call", "outcome": "passed"}, "duration": 1.0155575275421143, "outcome": "passed"}, {"setup": {"duration": 0.00021910667419433594, "name": "setup", "outcome": "passed"}, "teardown": {"duration": 8.487701416015625e-05, "name": "teardown", "outcome": "passed"}, "name": "tests/sell_through_tests/test_sell_through_api.py::SellThroughAPITests::test_user_can_not_retrieve_sell_through_for_invalid_factID", "run_index": 26, "call": {"duration": 1.0355629920959473, "name": "call", "outcome": "passed"}, "duration": 1.036086082458496, "outcome": "passed"}, {"setup": {"duration": 0.00027108192443847656, "name": "setup", "outcome": "passed"}, "teardown": {"duration": 8.988380432128906e-05, "name": "teardown", "outcome": "passed"}, "name": "tests/matchcompetitivepositioning_tests/test_matchcompetitivepositioning_api.py::CompetitivePositioningAPI::test_values_in_myproduct_grp_matches_according_to_day_key", "run_index": 23, "call": {"duration": 1.3563730716705322, "name": "call", "outcome": "passed"}, "duration": 1.3570051193237305, "outcome": "passed"}, {"setup": {"duration": 0.000286102294921875, "name": "setup", "outcome": "passed"}, "teardown": {"duration": 0.00010800361633300781, "name": "teardown", "outcome": "passed"}, "name": "tests/events_api_tests/test_events_api.py::EventsAPITests::test_user_can_not_retrieve_event_details_with_nonexisting_factid", "run_index": 5, "call": {"longrepr": "self = <api.tests.events_api_tests.test_events_api.EventsAPITests testMethod=test_user_can_not_retrieve_event_details_with_nonexisting_factid>\n\n    @pytest.mark.events_api\n    def test_user_can_not_retrieve_event_details_with_nonexisting_factid(self):\n        details = self.events_api_client.get_event_details_by_factID(99999)\n>       self.assertEquals(details.status_code, 500, msg=ExceptionMessageGenerator().status_code_exception(details, 500, details.status_code))\nE       AssertionError: 200 != 500 : \nE       Status codes do not match.\nE       Expected Status Code: 500\nE       Actual Status Code: 200\nE       *****************************\nE       Request Details: \nE       *****************************\nE       URL: https://dev.periscope.mckinsey-solutions.com/tst2app2/price/price/api/events?scope=planning\nE       Method: POST\nE       payload: {\"filters\": {\"factIdentifiers\": [{\"key\": 99999}]}}\nE       *****************************\nE       Response Details: \nE       *****************************\nE       Body: b'{\"success\":{\"HistoricEvents\":[],\"FutureEvents\":[],\"UpcomingEvent\":null},\"error\":\"\"}'\n\ntests/events_api_tests/test_events_api.py:109: AssertionError", "duration": 1.1125688552856445, "name": "call", "outcome": "failed"}, "duration": 1.1132490634918213, "outcome": "failed"}, {"setup": {"duration": 0.00026607513427734375, "name": "setup", "outcome": "passed"}, "teardown": {"duration": 8.606910705566406e-05, "name": "teardown", "outcome": "passed"}, "name": "tests/matchcompetitivepositioning_tests/test_matchcompetitivepositioning_api.py::CompetitivePositioningAPI::test_number_value_responses_of_mypricegroup_matches_db", "run_index": 18, "call": {"duration": 1.4582791328430176, "name": "call", "outcome": "passed"}, "duration": 1.458897352218628, "outcome": "passed"}, {"setup": {"duration": 0.000263214111328125, "name": "setup", "outcome": "passed"}, "teardown": {"duration": 6.985664367675781e-05, "name": "teardown", "outcome": "passed"}, "name": "tests/events_api_tests/test_events_api.py::EventsAPITests::test_upcoming_event_details_is_same_as_in_DB", "run_index": 3, "call": {"longrepr": "('/Users/jaydeepc/Documents/work/price/price_kohls_api_tests/api/tests/events_api_tests/test_events_api.py', 47, 'Skipped: Skipping becasue Upcoming event does not exist')", "duration": 1.6776020526885986, "name": "call", "outcome": "skipped"}, "duration": 1.6781983375549316, "outcome": "skipped"}, {"setup": {"duration": 0.00031113624572753906, "name": "setup", "outcome": "passed"}, "teardown": {"duration": 7.700920104980469e-05, "name": "teardown", "outcome": "passed"}, "name": "tests/sell_through_tests/test_sell_through_api.py::SellThroughAPITests::test_user_can_not_retrieve_sell_through_for_non_existing_factID", "run_index": 27, "call": {"duration": 0.937222957611084, "name": "call", "outcome": "passed"}, "duration": 0.9379222393035889, "outcome": "passed"}, {"setup": {"duration": 0.0002841949462890625, "name": "setup", "outcome": "passed"}, "teardown": {"duration": 0.00011205673217773438, "name": "teardown", "outcome": "passed"}, "name": "tests/force_breakup_tests/test_force_breakup_api.py::ForceBreakupAPITests::test_preSeason_in_force_breakup_details_is_matching_db", "run_index": 9, "call": {"duration": 1.347559928894043, "name": "call", "outcome": "passed"}, "duration": 1.3482403755187988, "outcome": "passed"}, {"setup": {"duration": 0.0002300739288330078, "name": "setup", "outcome": "passed"}, "teardown": {"duration": 9.107589721679688e-05, "name": "teardown", "outcome": "passed"}, "name": "tests/force_breakup_tests/test_force_breakup_api.py::ForceBreakupAPITests::test_user_can_retrieve_force_breakup_details", "run_index": 15, "call": {"duration": 1.0766680240631104, "name": "call", "outcome": "passed"}, "duration": 1.0772192478179932, "outcome": "passed"}, {"setup": {"duration": 17.936864137649536, "name": "setup", "outcome": "passed"}, "teardown": {"duration": 8.106231689453125e-05, "name": "teardown", "outcome": "passed"}, "name": "tests/sell_through_tests/test_sell_through_api.py::SellThroughAPITests::test_number_of_colums_retrieved_sell_through_details_is_43", "run_index": 24, "call": {"duration": 3.75008487701416, "name": "call", "outcome": "passed"}, "duration": 39.62389421463013, "outcome": "passed"}, {"setup": {"duration": 0.0002918243408203125, "name": "setup", "outcome": "passed"}, "teardown": {"duration": 8.511543273925781e-05, "name": "teardown", "outcome": "passed"}, "name": "tests/matchcompetitivepositioning_tests/test_matchcompetitivepositioning_api.py::CompetitivePositioningAPI::test_user_can_not_retrieve_details_of_mypricegroup_and_competitors_with_invalid_factid", "run_index": 19, "call": {"duration": 0.9592409133911133, "name": "call", "outcome": "passed"}, "duration": 0.9599096775054932, "outcome": "passed"}, {"setup": {"duration": 0.00026488304138183594, "name": "setup", "outcome": "passed"}, "teardown": {"duration": 8.797645568847656e-05, "name": "teardown", "outcome": "passed"}, "name": "tests/sell_through_tests/test_sell_through_api.py::SellThroughAPITests::test_the_values_returned_by_sell_through_api_are_correct", "run_index": 25, "call": {"longrepr": "self = <api.tests.sell_through_tests.test_sell_through_api.SellThroughAPITests testMethod=test_the_values_returned_by_sell_through_api_are_correct>\n\n    @pytest.mark.sell_through_api\n    def test_the_values_returned_by_sell_through_api_are_correct(self):\n        details = self.sell_through_client.get_sell_through_details_by_factID(self.planning_measure_id)\n        details_obj = details.object\n>       self.__verify_sell_through_values(self.sell_through_data, details_obj.success.values, details)\n\ntests/sell_through_tests/test_sell_through_api.py:38: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/sell_through_tests/test_sell_through_api.py:192: in __verify_sell_through_values\n    response_obj, ActualStdEffectivePctOff, actual_list[i].inTyActualSTDEffectivePctOff))\nE   AssertionError: 0.75345 != 0.7534 : \nE   The Assertion has failed.\nE   *************************************************************************\nE   Expected: 0.7534\nE   Actual: 0.75345\nE   *****************************\nE   Request Details: \nE   *****************************\nE   URL: https://dev.periscope.mckinsey-solutions.com/tst2app2/price/price/api/in/facts/93955/sellthrough/day\nE   Method: GET\nE   payload: None\nE   *****************************\nE   Response Details: \nE   *****************************\nE   Body: <api.price_api_clients.sell_through_client.models.response.SellThroughResponse object at 0x108638358>", "duration": 1.8769500255584717, "name": "call", "outcome": "failed"}, "duration": 1.8775677680969238, "outcome": "failed"}, {"setup": {"duration": 0.0002880096435546875, "name": "setup", "outcome": "passed"}, "teardown": {"duration": 7.486343383789062e-05, "name": "teardown", "outcome": "passed"}, "name": "tests/force_breakup_tests/test_force_breakup_api.py::ForceBreakupAPITests::test_user_can_not_retrieve_force_details_with_nonexisting_event_key", "run_index": 13, "call": {"longrepr": "self = <api.tests.force_breakup_tests.test_force_breakup_api.ForceBreakupAPITests testMethod=test_user_can_not_retrieve_force_details_with_nonexisting_event_key>\n\n    @pytest.mark.force_breakup_api\n    def test_user_can_not_retrieve_force_details_with_nonexisting_event_key(self):\n        details = self.forces_api_client.get_force_breakup_details_by_factID_and_eventkey(self.planning_measure_id, 999)\n>       self.assertEquals(details.status_code, 500, msg=ExceptionMessageGenerator().status_code_exception(details, 500, details.status_code))\nE       AssertionError: 200 != 500 : \nE       Status codes do not match.\nE       Expected Status Code: 500\nE       Actual Status Code: 200\nE       *****************************\nE       Request Details: \nE       *****************************\nE       URL: https://dev.periscope.mckinsey-solutions.com/tst2app2/price/price/api/in/forcebreakup\nE       Method: POST\nE       payload: {\"filters\": {\"dimensionfilters\": [{\"values\": [{\"key\": 999}]}], \"factIdentifiers\": [{\"key\": 93955}]}}\nE       *****************************\nE       Response Details: \nE       *****************************\nE       Body: b'{\"success\":{\"forces\":{}},\"error\":\"\"}'\n\ntests/force_breakup_tests/test_force_breakup_api.py:102: AssertionError", "duration": 0.9823460578918457, "name": "call", "outcome": "failed"}, "duration": 0.982996940612793, "outcome": "failed"}, {"setup": {"duration": 0.0002548694610595703, "name": "setup", "outcome": "passed"}, "teardown": {"duration": 7.390975952148438e-05, "name": "teardown", "outcome": "passed"}, "name": "tests/force_breakup_tests/test_force_breakup_api.py::ForceBreakupAPITests::test_user_can_not_retrieve_force_details_with_nonexisting_factid", "run_index": 14, "call": {"longrepr": "self = <api.tests.force_breakup_tests.test_force_breakup_api.ForceBreakupAPITests testMethod=test_user_can_not_retrieve_force_details_with_nonexisting_factid>\n\n    @pytest.mark.force_breakup_api\n    def test_user_can_not_retrieve_force_details_with_nonexisting_factid(self):\n        details = self.forces_api_client.get_force_breakup_details_by_factID_and_eventkey(9999999, self.event_key)\n>       self.assertEquals(details.status_code, 500, msg=ExceptionMessageGenerator().status_code_exception(details, 500, details.status_code))\nE       AssertionError: 200 != 500 : \nE       Status codes do not match.\nE       Expected Status Code: 500\nE       Actual Status Code: 200\nE       *****************************\nE       Request Details: \nE       *****************************\nE       URL: https://dev.periscope.mckinsey-solutions.com/tst2app2/price/price/api/in/forcebreakup\nE       Method: POST\nE       payload: {\"filters\": {\"dimensionfilters\": [{\"values\": [{\"key\": 41}]}], \"factIdentifiers\": [{\"key\": 9999999}]}}\nE       *****************************\nE       Response Details: \nE       *****************************\nE       Body: b'{\"success\":{\"forces\":{}},\"error\":\"\"}'\n\ntests/force_breakup_tests/test_force_breakup_api.py:92: AssertionError", "duration": 1.0963268280029297, "name": "call", "outcome": "failed"}, "duration": 1.0969104766845703, "outcome": "failed"}, {"setup": {"duration": 0.0002951622009277344, "name": "setup", "outcome": "passed"}, "teardown": {"duration": 8.511543273925781e-05, "name": "teardown", "outcome": "passed"}, "name": "tests/force_breakup_tests/test_force_breakup_api.py::ForceBreakupAPITests::test_user_can_not_retrieve_force_details_with_invalid_factid", "run_index": 12, "call": {"duration": 1.006775140762329, "name": "call", "outcome": "passed"}, "duration": 1.0074505805969238, "outcome": "passed"}], "created_at": "2017-01-30 20:31:23.175451", "summary": {"num_tests": 29, "failed": 4, "duration": 137.94698810577393, "passed": 23, "skipped": 2}}}